local druid = require("druid.druid")

local function on_button_callback(self)
	msg.post('scene_manager:/main_scene#scene_manager', 'restart_game')
end

function init(self)
	self.druid = druid.new(self)
	self.button = self.druid:new_button("restart_btn", on_button_callback)
	self.scale_x = 0.01
	gui.set_scale(gui.get_node('xp_bar'), vmath.vector3(self.scale_x,0.1,0))
	gui.set_enabled(gui.get_node('bg'), false)
	gui.set_enabled(gui.get_node('text1'), false)
	gui.set_enabled(gui.get_node('turn_count_ui'), false)
	
end

function final(self)
	self.druid:final()
end

function update(self, dt)
	self.druid:update(dt)
end

function on_message(self, message_id, message, sender)
	self.druid:on_message(message_id, message, sender)
	if message_id == hash('add_xp') then
		self.scale_x = self.scale_x + message.xp
		if self.scale_x >= 2.8 then
			msg.post('player#player', 'level_up')
			self.scale_x = 0.01
		end
		gui.set_scale(gui.get_node('xp_bar'), vmath.vector3(self.scale_x,0.1,0))
	end
	if message_id == hash('show_turn_count') then
		gui.set_text(gui.get_node('turn_count_ui'), message.count)
	end
	if message_id == hash('show_restart_btn') then 
		gui.set_enabled(gui.get_node('bg'), true)
		gui.set_enabled(gui.get_node('text1'), true)
		gui.set_enabled(gui.get_node('turn_count_ui'), true)
	end

end

function on_input(self, action_id, action)
	return self.druid:on_input(action_id, action)
end

